name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: read  # Required for GitHub Packages authentication

    env:
      # Supabase Configuration
      VITE_SUPABASE_URL: ${{ vars.VITE_SUPABASE_URL }}
      VITE_SUPABASE_PUBLISHABLE_KEY: ${{ secrets.VITE_SUPABASE_PUBLISHABLE_KEY }}

      # SmartSuite Configuration
      VITE_SMARTSUITE_API_KEY: ${{ secrets.VITE_SMARTSUITE_API_KEY }}
      VITE_SMARTSUITE_WORKSPACE_ID: ${{ vars.VITE_SMARTSUITE_WORKSPACE_ID }}
      VITE_SMARTSUITE_PROJECTS_TABLE: ${{ vars.VITE_SMARTSUITE_PROJECTS_TABLE }}
      VITE_SMARTSUITE_VIDEOS_TABLE: ${{ vars.VITE_SMARTSUITE_VIDEOS_TABLE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@elevanaltd'
          always-auth: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Temporarily disabled during GitHub Packages migration - package-lock.json will be generated by CI
      # - name: Validate lock file sync
      #   run: |
      #     # Detect package.json/package-lock.json desynchronization
      #     if ! npm install --package-lock-only --dry-run &>/dev/null; then
      #       echo "❌ ERROR: package-lock.json is out of sync with package.json"
      #       echo ""
      #       echo "This typically happens when package.json is updated but 'npm install' wasn't run."
      #       echo ""
      #       echo "To fix this issue:"
      #       echo "  1. Run 'npm install' locally"
      #       echo "  2. Commit the updated package-lock.json"
      #       echo "  3. Push your changes"
      #       exit 1
      #     fi
      #     echo "✅ Lock file is synchronized"

      - name: Install dependencies
        run: npm install  # Using npm install instead of npm ci to generate package-lock.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: TypeScript check
        run: npm run typecheck

      - name: ESLint check
        run: npm run lint

      - name: Run tests
        run: npm run test -- --run

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist/
          retention-days: 7
